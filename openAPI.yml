openapi: 3.0.1
info:
  title: Employee Eligibility
  summary: Employee Eligibility
  description: |

    Employee Eligibility API helps you do awesome stuff. ðŸš€

    ## Candidates

    This API allows you to view, add and update candidates. You will be able to:

    * **View a candidate**
    * **View ALL candidate**
    * **View the next candidate ready for onboarding**
    * **Set the status of a candidate to onboarding**
    * **Add a candidate**

    * **Filter candidates using Neural Network** (_not implemented_).
  termsOfService: http://example.com/terms/
  contact:
    name: Gerry Baird
    url: https://github.com/gerry-baird/employee-eligibility-api
    email: gerry.baird@uk.ibm.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.8'
servers:
  - url: https://application-ab.151di5ffrvir.eu-gb.codeengine.appdomain.cloud
paths:
  /:
    get:
      summary: Employee Eligibility Ping
      description: Employee Eligibility Ping
      operationId: greeting
      responses:
        '200':
          description: Employee Eligibility Ping
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - HTTPBasic: []
  /candidate/{id}:
    get:
      summary: View a candidate
      description: View a candidate
      operationId: get_candidate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      responses:
        '200':
          description: The candidate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /candidates:
    get:
      summary: View all candidates
      description: View all candidates
      operationId: getCandidates
      responses:
        '200':
          description: All the candidate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateList'
  /onboarding:
    get:
      summary: Next candidate ready for onboarding
      description: Next candidate ready for onboarding
      operationId: getNextCandidateForOnboarding
      responses:
        '200':
          description: The candidate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
  /setStatusOnboarding:
    post:
      summary: Set candidate status to onboarding
      description: Set candidate status to onboarding
      operationId: updateToOnboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateIdentifier'
        required: true
      responses:
        '200':
          description: Updated candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /reset:
    post:
      summary: Reset
      description: Resets all candidates to initial state
      operationId: reset
      responses:
        '200':
          description: All candidate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateList'
  /candidate:
    post:
      summary: Add Candidate
      description: Add Candidate
      operationId: addCandidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate'
        required: true
      responses:
        '200':
          description: New Candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Candidate:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        status:
          type: string
          title: Status
        dob:
          type: string
          format: date
          title: Dob
        position:
          type: string
          title: Position
        location:
          type: string
          title: Location
        dept:
          type: string
          title: Dept
        eligibility:
          type: string
          title: Eligibility
        ref:
          type: string
          title: Ref
      type: object
      required:
        - id
        - name
        - status
        - dob
        - position
        - location
        - dept
        - eligibility
        - ref
      title: Candidate
    CandidateIdentifier:
      properties:
        id:
          type: integer
          title: Id
        ref:
          type: string
          title: Ref
      type: object
      required:
        - id
        - ref
      title: CandidateIdentifier
    CandidateList:
      properties:
        candidates:
          items:
            $ref: '#/components/schemas/Candidate'
          type: array
          title: Candidates
      type: object
      required:
        - candidates
      title: CandidateList
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Message:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
        - message
      title: Message
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    HTTPBasic:
      type: http
      scheme: basic
